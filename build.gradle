plugins {
    id 'dev.architectury.loom' version '1.1.324' apply false
    id 'com.github.johnrengelman.shadow' version '7.0.0' apply false
    id 'architectury-plugin' version '3.4.151' apply false
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'architectury-plugin'
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'maven-publish'

    archivesBaseName  = 'hmc-specifics'
    version = "$rootProject.mc_version-$rootProject.project_version"
    group = 'me.earth.headlessmc'

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

    loom {
        silentMojangMappingsLicense()
        mixin.defaultRefmapName = 'mixins.headlessmc.refmap.json'
    }

    repositories {
        mavenCentral()
        maven {
            name '3arthMaven'
            url 'https://3arthqu4ke.github.io/maven'
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.mc_version}"
        mappings loom.officialMojangMappings()

        api "me.earth.headlessmc:hmc-specifics-api:$rootProject.specifics_version"
        api "me.earth.headlessmc:headlessmc-runtime:$rootProject.hmc_version"
        compileOnly 'org.spongepowered:mixin:0.8.5'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        if (JavaVersion.current().isJava9Compatible()) {
            it.options.release.set(17)
        }
    }

    jar {
        manifest {
            attributes(
                'MixinConfigs': 'mixins.headlessmc.json',
                'MixinConnector': 'me.earth.headlessmc.specifics.HeadlessMcMixinConnector',
                'Implementation-Title': 'HeadlessMc',
                'Implementation-Version': project.version,
            )
        }
    }
}

architectury {
    injectInjectables = false
    common('forge', 'fabric')
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'

    archivesBaseName  = "hmc-specifics-$project.name"

    configurations {
        jarLibs
    }

    dependencies {
        jarLibs "me.earth.headlessmc:hmc-specifics-api:$rootProject.specifics_version"
    }

    shadowJar {
        configurations = [project.configurations.jarLibs]
        classifier 'dev-shadow'
    }

    remapJar {
        inputFile.set shadowJar.archiveFile
        dependsOn shadowJar
        classifier null
    }
}

allprojects {
    publishing {
        publications {
            "${project.name.toLowerCase()}"(MavenPublication) {
                ((MavenPublication) it).groupId "${project.group}"
                ((MavenPublication) it).artifactId "${project.archivesBaseName.toLowerCase()}"
                ((MavenPublication) it).version "${project.version}"
                from components.java
            }
        }

        repositories {
            maven {
                name = 'BuildDirMaven'
                url = rootProject.layout.buildDirectory.dir('maven')
            }

            if (System.getenv('DEPLOY_TO_GITHUB_PACKAGES_URL') != null) {
                maven {
                    name = 'GithubPagesMaven'
                    url = System.getenv('DEPLOY_TO_GITHUB_PACKAGES_URL')
                    credentials {
                        username = System.getenv('GITHUB_USER')
                        password = System.getenv('GITHUB_TOKEN')
                    }
                }
            }
        }
    }

    publish {
        dependsOn(build)
    }
}
