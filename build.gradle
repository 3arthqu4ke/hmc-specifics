plugins {
    id 'java'
    id 'maven-publish'
}

group 'me.earth.headlessmc'
version '1.2.0'

repositories {
    mavenCentral()
    maven {
        name '3arthMaven'
        url 'https://3arthqu4ke.github.io/maven'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava {
    if (JavaVersion.current().ordinal() > JavaVersion.VERSION_1_8.ordinal()) {
        options.compilerArgs.addAll(['--release', '8'])
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    implementation ('me.earth.headlessmc:headlessmc:1.6.3') {
        exclude module: 'headlessmc-launcher'
        exclude module: 'headlessmc-lwjgl'
    }

    testImplementation('me.earth.headlessmc:headlessmc-commons:1.6.3:test-fixtures')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        "$project.name"(MavenPublication) {
            ((MavenPublication) it).groupId "${project.group}"
            ((MavenPublication) it).artifactId "${project.archivesBaseName.toLowerCase()}"
            ((MavenPublication) it).version "${project.version}"
            //noinspection GroovyAssignabilityCheck
            from components.java
        }
    }

    repositories {
        // mavenLocal()
        // maven {
        //     name = 'SomewhereOnThisMachine'
        //     url = 'file://...'
        // }

        maven {
            name = 'BuildDirMaven'
            url = rootProject.layout.buildDirectory.dir('maven')
        }

        if (System.getProperty("otherrepo") != null) {
            maven {
                name = 'otherrepo'
                url = "${System.getProperty("otherrepo")}"
            }
        }

        if (System.getenv('DEPLOY_TO_GITHUB_PACKAGES_URL') != null) {
            maven {
                name = 'GithubPagesMaven'
                url = System.getenv('DEPLOY_TO_GITHUB_PACKAGES_URL')
                credentials {
                    username = System.getenv('GITHUB_USER')
                    password = System.getenv('GITHUB_TOKEN')
                }
            }
        }
    }
}

publish {
    dependsOn(javadocJar)
    dependsOn(sourcesJar)
    dependsOn(build)
}
