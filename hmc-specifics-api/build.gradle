plugins {
    id 'java'
    id 'maven-publish'
}

group 'me.earth.headlessmc'
version "${project_version}"

repositories {
    // mavenLocal()
    mavenCentral()
    maven {
        name '3arthMaven'
        url 'https://3arthqu4ke.github.io/maven'
    }
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/maven"
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }

    // TODO: REMOVE!
    maven {
        name = "ossrh" // for MinecraftAuth SNAPSHOTS, TODO: PLEASE RELEASE ON MAVENCENTRAL!
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name 'JitPackMaven'
        url 'https://jitpack.io'
    }
    maven {
        name 'SuperDirMaven'
        url new File(layout.projectDirectory.asFile.getParent() + "/libs").toURI().toURL().toString()
    }

    maven {
        url "https://libraries.minecraft.net"
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava {
    if (JavaVersion.current().ordinal() > JavaVersion.VERSION_1_8.ordinal()) {
        options.compilerArgs.addAll(['--release', '8'])
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    compileOnly 'com.mojang:brigadier:1.0.17' // old version for testing
    // compileOnly 'com.mojang:brigadier:1.2.9' // new version for testing

    compileOnly (group: 'net.minecrell', name: 'terminalconsoleappender', version: '1.3.0') {
        transitive false
    }

    compileOnly 'org.spongepowered:mixin:0.8.5-SNAPSHOT'
    compileOnly 'com.github.ImpactDevelopment:SimpleTweaker:1.2'
    compileOnly ('net.minecraft:launchwrapper:1.12') {
        exclude module: 'log4j-api'
        exclude module: 'log4j-core'
    }

    compileOnly 'org.apache.logging.log4j:log4j-api:2.23.1'
    compileOnly 'org.apache.logging.log4j:log4j-core:2.23.1'
    //compileOnly 'org.apache.logging.log4j:log4j-api:2.0-beta9' // for testing compatibility with the 1.7.10 version
    //compileOnly 'org.apache.logging.log4j:log4j-core:2.0-beta9' // for testing compatibility with the 1.7.10 version

    implementation "me.earth.headlessmc:headlessmc-runtime:${headlessmc_version}"
    implementation "me.earth.headlessmc:headlessmc-auth:${headlessmc_version}"
    implementation "me.earth.headlessmc:headlessmc-jline:${headlessmc_version}"

    implementation 'net.kyori:adventure-text-serializer-ansi:4.17.0'
    implementation 'net.kyori:adventure-text-serializer-gson:4.17.0'
    implementation 'net.kyori:adventure-text-serializer-legacy:4.17.0'

    implementation 'org.jline:jline:3.26.3'

    testImplementation("me.earth.headlessmc:headlessmc-api:${headlessmc_version}:test-fixtures")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'com.mojang:brigadier:1.0.17' // old version for testing
    // testImplementation 'com.mojang:brigadier:1.2.9' // new version for testing
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        "$project.name"(MavenPublication) {
            ((MavenPublication) it).groupId "${project.group}"
            ((MavenPublication) it).artifactId "${project.archivesBaseName.toLowerCase()}"
            ((MavenPublication) it).version "${project.version}"
            //noinspection GroovyAssignabilityCheck
            from components.java
        }
    }

    repositories {
        // mavenLocal()
        // maven {
        //     name = 'SomewhereOnThisMachine'
        //     url = 'file://...'
        // }

        maven {
            name = 'BuildDirMaven'
            url = rootProject.layout.buildDirectory.dir('maven')
        }

        if (System.getProperty("otherrepo") != null) {
            maven {
                name = 'otherrepo'
                url = "${System.getProperty("otherrepo")}"
            }
        }

        if (System.getenv('DEPLOY_TO_GITHUB_PACKAGES_URL') != null) {
            maven {
                name = 'GithubPagesMaven'
                url = System.getenv('DEPLOY_TO_GITHUB_PACKAGES_URL')
                credentials {
                    username = System.getenv('GITHUB_USER')
                    password = System.getenv('GITHUB_TOKEN')
                }
            }
        }
    }
}

publish {
    dependsOn(javadocJar)
    dependsOn(sourcesJar)
    dependsOn(build)
}
